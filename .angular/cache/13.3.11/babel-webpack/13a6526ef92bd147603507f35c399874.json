{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { MSAL_GUARD_CONFIG } from '@azure/msal-angular';\nconst ELEMENT_DATA = [{\n  policyNo: 1,\n  policyName: 'P1',\n  policyIsActive: 'Yes',\n  policyType: 'Health Insurance'\n}, {\n  policyNo: 2,\n  policyName: 'P2',\n  policyIsActive: 'No',\n  policyType: 'Motor Insurance'\n}, {\n  policyNo: 3,\n  policyName: 'P3',\n  policyIsActive: 'Yes',\n  policyType: 'Home Insurance'\n}, {\n  policyNo: 4,\n  policyName: 'P4',\n  policyIsActive: 'No',\n  policyType: 'Fire Insurance'\n}, {\n  policyNo: 5,\n  policyName: 'P5',\n  policyIsActive: 'Yes',\n  policyType: 'Travel Insurance'\n}, {\n  policyNo: 6,\n  policyName: 'P6',\n  policyIsActive: 'No',\n  policyType: 'Term Life Insurance'\n}, {\n  policyNo: 7,\n  policyName: 'P7',\n  policyIsActive: 'Yes',\n  policyType: 'Term Life Insurance'\n}];\nlet HomeComponent = class HomeComponent {\n  constructor(azureAdDemoService, msalGuardConfig, employeeService) {\n    this.azureAdDemoService = azureAdDemoService;\n    this.msalGuardConfig = msalGuardConfig;\n    this.employeeService = employeeService;\n    this.isUserLoggedIn = false;\n    this.displayPolicies = false;\n    this.displayedColumns = ['policyNo', 'policyName', 'policyIsActive', 'policyType'];\n    this.dataSource = ELEMENT_DATA;\n  }\n  ngOnInit() {\n    this.azureAdDemoService.isUserLoggedIn.subscribe(x => {\n      this.isUserLoggedIn = x;\n    });\n    const xyz = localStorage.getItem('token');\n    this.employees$ = this.employeeService.getEmployees();\n    this.employees$.subscribe(res => {\n      console.log(\"######\", res);\n    });\n    // console.log(\"DDDDDDD\", this.employees)\n  }\n\n  showPolicies() {\n    this.displayPolicies = !this.displayPolicies;\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n}), __param(1, Inject(MSAL_GUARD_CONFIG))], HomeComponent);\nexport { HomeComponent };","map":null,"metadata":{},"sourceType":"module"}