{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { MSAL_GUARD_CONFIG } from '@azure/msal-angular';\nimport { InteractionStatus } from '@azure/msal-browser';\nimport { Subject, filter, takeUntil } from 'rxjs';\nlet AppComponent = class AppComponent {\n  constructor(msalGuardConfig, msalBroadcastService, authService, azureAdDemoService) {\n    this.msalGuardConfig = msalGuardConfig;\n    this.msalBroadcastService = msalBroadcastService;\n    this.authService = authService;\n    this.azureAdDemoService = azureAdDemoService;\n    this.title = 'app-service-webapp';\n    this.isUserLoggedIn = false;\n    this._destroy = new Subject();\n  }\n  ngOnInit() {\n    this.msalBroadcastService.inProgress$.pipe(filter(interactionStatus => interactionStatus == InteractionStatus.None), takeUntil(this._destroy)).subscribe(x => {\n      this.isUserLoggedIn = this.authService.instance.getAllAccounts().length > 0;\n      this.azureAdDemoService;\n    });\n  }\n  ngOnDestroy() {\n    this._destroy.next(undefined);\n    this._destroy.complete();\n  }\n  login() {\n    if (this.msalGuardConfig.authRequest) {\n      this.authService.loginRedirect(Object.assign({}, this.msalGuardConfig.authRequest));\n    } else {\n      this.authService.loginRedirect();\n    }\n  }\n  logout() {\n    // this.authService.loginRedirect({\n    //   // postLogoutRedirectUri: environment.postLogoutUrl\n    // })\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n}), __param(0, Inject(MSAL_GUARD_CONFIG))], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}