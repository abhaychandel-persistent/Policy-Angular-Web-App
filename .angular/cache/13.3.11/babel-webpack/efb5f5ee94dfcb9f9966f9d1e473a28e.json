{"ast":null,"code":"import { MSAL_GUARD_CONFIG } from '@azure/msal-angular';\nimport { EventType, InteractionStatus } from '@azure/msal-browser';\nimport { Subject, filter, takeUntil } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@azure/msal-angular\";\nimport * as i2 from \"./azure-ad-demo.service\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nfunction AppComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.login();\n    });\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.logout();\n    });\n    i0.ɵɵtext(1, \"Logout\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"profile\"];\n};\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(msalGuardConfig, msalBroadcastService, authService, azureAdDemoService) {\n      this.msalGuardConfig = msalGuardConfig;\n      this.msalBroadcastService = msalBroadcastService;\n      this.authService = authService;\n      this.azureAdDemoService = azureAdDemoService;\n      this.title = 'app-service-webapp';\n      this.isUserLoggedIn = false;\n      this.isIframe = false;\n      this._destroy = new Subject();\n      this.ELEMENT_DATA = [{\n        policyNo: 1,\n        policyName: 'Hydrogen',\n        policyIsActive: 'Yes',\n        policyType: 'policyType'\n      }, {\n        policyNo: 2,\n        policyName: 'Hydrogen',\n        policyIsActive: 'Yes',\n        policyType: 'policyType'\n      }, {\n        policyNo: 3,\n        policyName: 'Hydrogen',\n        policyIsActive: 'Yes',\n        policyType: 'policyType'\n      }, {\n        policyNo: 4,\n        policyName: 'Hydrogen',\n        policyIsActive: 'Yes',\n        policyType: 'policyType'\n      }, {\n        policyNo: 5,\n        policyName: 'Hydrogen',\n        policyIsActive: 'Yes',\n        policyType: 'policyType'\n      }, {\n        policyNo: 6,\n        policyName: 'Hydrogen',\n        policyIsActive: 'Yes',\n        policyType: 'policyType'\n      }, {\n        policyNo: 7,\n        policyName: 'Hydrogen',\n        policyIsActive: 'Yes',\n        policyType: 'policyType'\n      }];\n    }\n    ngOnInit() {\n      this.isIframe = window !== window.parent && !window.opener;\n      this.msalBroadcastService.inProgress$.pipe(filter(interactionStatus => interactionStatus == InteractionStatus.None), takeUntil(this._destroy)).subscribe(x => {\n        this.isUserLoggedIn = this.authService.instance.getAllAccounts().length > 0;\n        this.azureAdDemoService.isUserLoggedIn.next(this.isUserLoggedIn);\n      });\n      this.msalBroadcastService.msalSubject$.pipe(filter(msg => msg.eventType === EventType.ACQUIRE_TOKEN_SUCCESS), takeUntil(this._destroy)).subscribe(result => {\n        this.samplePayload = result.payload;\n        localStorage.setItem('token', this.samplePayload.accessToken);\n      });\n    }\n    ngOnDestroy() {\n      this._destroy.next(undefined);\n      this._destroy.complete();\n    }\n    login() {\n      console.log(\"*******3333\", this.msalGuardConfig.authRequest);\n      if (this.msalGuardConfig.authRequest) {\n        // let accounts = this.authService.instance.getAllAccounts();\n        // console.log(\"*******3333\",this.msalGuardConfig.authRequest);\n        // this.authService.instance.setActiveAccount(accounts[0]);\n        //  this.msalGuardConfig.authRequest = this.authService.instance.getAllAccounts()[0];\n        this.authService.loginRedirect(Object.assign({}, this.msalGuardConfig.authRequest));\n        // this.authService.acquireTokenPopup({...this.msalGuardConfig.authRequest} as PopupRequest)\n        //   .subscribe((response: any) => {\n        //     console.log(\"*******3333\",response);\n        //     console.log(\"*******113333\",response.accessToken);\n        //     // this.authService.instance.setActiveAccount(response.account);\n        //     console.log(response.accessToken);\n        //     console.log(this.authService.instance.getAllAccounts());\n        //   });\n      } else {\n        this.authService.loginRedirect();\n      }\n    }\n    logout() {\n      this.authService.logoutRedirect({\n        postLogoutRedirectUri: environment.postLogoutUrl\n      });\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(MSAL_GUARD_CONFIG), i0.ɵɵdirectiveInject(i1.MsalBroadcastService), i0.ɵɵdirectiveInject(i1.MsalService), i0.ɵɵdirectiveInject(i2.AzureAdDemoService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[\"color\", \"primary\", 1, \"mat-elevation-z4\"], [\"href\", \"/\", 1, \"title\"], [1, \"toolbar-spacer\"], [\"mat-button\", \"\", 3, \"routerLink\"], [\"mat-raised-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"a\", 1);\n        i0.ɵɵtext(2, \"Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"a\", 3);\n        i0.ɵɵtext(5, \"Profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, AppComponent_button_6_Template, 2, 0, \"button\", 4);\n        i0.ɵɵtemplate(7, AppComponent_button_7_Template, 2, 0, \"button\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isUserLoggedIn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isUserLoggedIn);\n      }\n    },\n    directives: [i3.MatToolbar, i4.MatAnchor, i5.RouterLinkWithHref, i6.NgIf, i4.MatButton, i5.RouterOutlet],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}